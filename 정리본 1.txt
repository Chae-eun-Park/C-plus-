(자료형)- 강제 형변환
-둘중에 하나만 형변환 되는 것이 있어도 가능.

{{지역변수}, 전역변수}
{}-블록

블록의 범위내에서만 : 지역변수
지역변수를 생산했으면 사용하기전 초기화.

파일내모든함수에서유효 : 전역변수

전역변수와 정적변수는 선언할 때 지역변수와 달리 0으로 초기화가 된다.
static  = 정적변수 = 프로그램 끝날때까지 유지

//
제어문
(==와=구분)
= : 대입된 값이 0이 아니면 참

ex) int a=10;
    int b = 5;
if(a=b){...}
 이 코드가 실행된다.= 는 0만아니면 다 참이기 때문이다.

switch문
각 case 끝에 break; 잊지않기!
없으면 계속 아래 줄의 코드로진행.

for문
for문 내의 조건으로 쓰인 변수는 건드리지 말것,
because, 무한루프 가능성 있다.


while문
영원히 참이 되진 않는지 확인, 무한루프생김
무조건 거짓이되면 쓸모없어짐.


//1초에 한줄씩 *~*x5까지(c++)
#include <iostream>
#include <windows.h>
using namespace std;
/* run this program using the console pauser or add your own getch, system("pause") or input loop */

int main(int argc, char** argv) {
	
	for(int i=0;i<100/8;i++){
		cout <<"*"<< endl;
		Sleep(1000);
		cout <<"**"<< endl;
		Sleep(1000);
		cout <<"***"<< endl;
		Sleep(1000);	
		cout <<"****"<< endl;
		Sleep(1000);	
		cout <<"*****"<< endl;
		Sleep(1000);
	}
	return 0;
}

///* 반복개선

for(int i=0;i<100/8;i++){
   for(int num=1;num<=5;num++){
   	   for(int j=1;j<=num;j++)
		   cout << "*";
	   cout << endl;
	   Sleep(1000);
	   }
	   for(int num=4;num<=2;num--){
	   	  for(int j=1;j<=num;j++)
	   	    cout << "**";
	   	  cout << endl;
	   	  Sleep(1000);
	      }
	    for(int num=4;num<=2;num--){
	   	  for(int j=1;j<=num;j++)
	   	    cout << "***";
	   	  cout << endl;
	   	  Sleep(1000); 등등등 */
			 
			 
/*방향성 알고리즘
int dir = 0;
int num = 0;
for(int i=0; i<100; i++){
	if(dir==0){
		num++;
		if(num==5) dir=1;
    }
    else{
    	num--;
    	if(num==1)dir=0;
    	}
    	for(int j=0; j<num; j++) cout << '*';
    	cout << endl;
    	Sleep(1000);
    	반복.
*/

/*연산자알고리즘
int num = 0;
 for(int i=0; i<100; i++){
 num=i%4;
   if((i/4)&1) num=4-num;
    for(int j=0; j<=num;j++)cout << '*'
    cout << endl;
    Sleep(1000);
*/ 
/* 반복개선

for(int i=0;i<100/8;i++){
   for(int num=1;num<=5;num++){
   	   for(int j=1;j<=num;j++)
		   cout << "*";
	   cout << endl;
	   Sleep(1000);
	   }
	   for(int num=4;num<=2;num--){
	   	  for(int j=1;j<=num;j++)
	   	    cout << "**";
	   	  cout << endl;
	   	  Sleep(1000);
	      }
	    for(int num=4;num<=2;num--){
	   	  for(int j=1;j<=num;j++)
	   	    cout << "***";
	   	  cout << endl;
	   	  Sleep(1000); 등등등 */
			 
			 
/*방향성 알고리즘
int dir = 0;
int num = 0;
for(int i=0; i<100; i++){
	if(dir==0){
		num++;
		if(num==5) dir=1;
    }
    else{
    	num--;
    	if(num==1)dir=0;
    	}
    	for(int j=0; j<num; j++) cout << '*';
    	cout << endl;
    	Sleep(1000);
    	반복.
*/
/*연산자알고리즘
int num = 0;
for(int i=0; i<100; i++){
num=i%4;
if((i/4)&1) num=4-num;
for(int j=0; j<=num;j++)cout << '*'
cout << endl;
Sleep(1000);


1로 가면 감소. 
*/
#include <stdio.h>

/* run this program using the console pauser or add your own getch, system("pause") or input loop */

int main() {
	
	int w,h,x,y,t,p,q;
	scanf("%d%d%d%d%d",&w,&h,&p,&q,&t);
	p += t, q += t;
	x = p%w, y = q%h;
	if((p/w)&1)x=w-x;//벽 증가방향인지, 벽이 감소방향인지  결정 
	if((q/h)&1)y=h-y;
	printf("%d %d\n",x,y);
	
	return 0; 
}/*2차 격자공간에서  격자공간을 기록하는 int형 변수 w,h
초기위치좌표 x   
<개미 벽튕기기.









